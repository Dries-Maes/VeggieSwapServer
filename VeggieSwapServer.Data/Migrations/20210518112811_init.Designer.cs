// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeggieSwapServer.Data;

namespace VeggieSwapServer.Data.Migrations
{
    [DbContext(typeof(VeggieSwapServerContext))]
    [Migration("20210518112811_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 888, DateTimeKind.Local).AddTicks(3975),
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 888, DateTimeKind.Local).AddTicks(3975),
                            PostalCode = 9000,
                            StreetName = "Anti-Veggiestraat",
                            StreetNumber = 89,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EuroAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 890, DateTimeKind.Local).AddTicks(4769),
                            EuroAmount = 6.9m,
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 890, DateTimeKind.Local).AddTicks(4769),
                            VAmount = 69m,
                            WalletId = 1
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 889, DateTimeKind.Local).AddTicks(3041),
                            ImageUrl = "artichokes.svg",
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 889, DateTimeKind.Local).AddTicks(3041),
                            Name = "Artichokes"
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 889, DateTimeKind.Local).AddTicks(6687),
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 889, DateTimeKind.Local).AddTicks(6687)
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.TradeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int>("TradeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("TradeId");

                    b.HasIndex("UserId");

                    b.ToTable("TradeItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 25,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 889, DateTimeKind.Local).AddTicks(9687),
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 889, DateTimeKind.Local).AddTicks(9687),
                            ResourceId = 1,
                            TradeId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 882, DateTimeKind.Local).AddTicks(6137),
                            Email = "kobe@mail.com",
                            FirstName = "Kobe",
                            ImageUrl = "https://robohash.org/Kobe",
                            IsAdmin = true,
                            LastName = "Delo",
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 882, DateTimeKind.Local).AddTicks(6137),
                            PasswordHash = new byte[] { 10, 133, 53, 120, 120, 216, 41, 232, 174, 152, 236, 213, 22, 73, 242, 123, 168, 218, 228, 237, 43, 140, 129, 142, 162, 247, 97, 150, 120, 142, 205, 72, 30, 219, 167, 80, 235, 196, 153, 236, 159, 43, 113, 34, 96, 192, 173, 153, 209, 91, 122, 218, 205, 213, 114, 35, 82, 58, 87, 61, 73, 192, 63, 179 },
                            PasswordSalt = new byte[] { 46, 27, 175, 50, 250, 135, 27, 29, 226, 26, 174, 219, 42, 124, 113, 46, 0, 51, 234, 102, 6, 97, 17, 72, 99, 142, 109, 56, 246, 171, 76, 2, 100, 171, 115, 190, 139, 106, 60, 130, 151, 188, 9, 244, 176, 176, 175, 172, 20, 98, 73, 249, 26, 52, 180, 215, 247, 90, 104, 116, 215, 110, 126, 245, 107, 62, 135, 121, 237, 227, 133, 172, 89, 149, 80, 24, 43, 132, 137, 156, 155, 38, 112, 213, 90, 59, 190, 48, 144, 58, 158, 84, 109, 63, 38, 254, 42, 172, 65, 157, 204, 251, 37, 110, 166, 27, 215, 6, 191, 60, 252, 203, 241, 168, 77, 127, 229, 251, 17, 30, 46, 54, 250, 1, 159, 71, 84, 11 }
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("VAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 18, 13, 28, 10, 888, DateTimeKind.Local).AddTicks(9106),
                            ModifiedAt = new DateTime(2021, 5, 18, 13, 28, 10, 888, DateTimeKind.Local).AddTicks(9106),
                            UserId = 1,
                            VAmount = 200m
                        });
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Address", b =>
                {
                    b.HasOne("VeggieSwapServer.Data.Entities.User", "User")
                        .WithOne("Address")
                        .HasForeignKey("VeggieSwapServer.Data.Entities.Address", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Purchase", b =>
                {
                    b.HasOne("VeggieSwapServer.Data.Entities.Wallet", "Wallet")
                        .WithMany("Purchases")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.TradeItem", b =>
                {
                    b.HasOne("VeggieSwapServer.Data.Entities.Resource", "Resource")
                        .WithMany("TradeItems")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeggieSwapServer.Data.Entities.Trade", "Trade")
                        .WithMany("TradeItems")
                        .HasForeignKey("TradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeggieSwapServer.Data.Entities.User", "User")
                        .WithMany("TradeItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("Trade");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Wallet", b =>
                {
                    b.HasOne("VeggieSwapServer.Data.Entities.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("VeggieSwapServer.Data.Entities.Wallet", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Resource", b =>
                {
                    b.Navigation("TradeItems");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Trade", b =>
                {
                    b.Navigation("TradeItems");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("TradeItems");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("VeggieSwapServer.Data.Entities.Wallet", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
